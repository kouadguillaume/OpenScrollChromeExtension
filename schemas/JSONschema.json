{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "OpenScroll Conversation (Production-Ready)",
    "description": "A production-ready schema for storing conversations. Includes examples, strict validation, and modular definitions for maintainability.",
    "type": "object",
    "additionalProperties": false,
    "properties": {
      "_id": {
        "description": "The unique identifier for the document in the database (e.g., MongoDB ObjectId). Automatically generated by the database.",
        "type": "string",
        "pattern": "^[0-9a-fA-F]{24}$",
        "examples": ["60d5ecf1b39e3a001f3e8c89"]
      },
      "schema_version": {
        "description": "The version of this schema, to allow for future migrations.",
        "type": "string",
        "default": "1.2.0",
        "examples": ["1.2.0"]
      },
      "conversation_id": {
        "description": "A unique, shareable identifier for the conversation (UUID). Should be indexed for fast lookups.",
        "type": "string",
        "format": "uuid",
        "examples": ["123e4567-e89b-12d3-a456-426614174000"]
      },
      "title": {
        "description": "The title of the conversation, scraped from the source.",
        "type": "string",
        "examples": ["AI Playground Design Framework"]
      },
      "source": {
        "description": "Information about the conversation's origin.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "description": "The method of ingestion.",
            "type": "string",
            "enum": ["chatgpt_share_link", "chrome_extension", "direct_upload", "api"],
            "examples": ["chatgpt_share_link"]
          },
          "url": {
            "description": "The original URL of the shared conversation.",
            "type": "string",
            "format": "uri",
            "examples": ["https://chat.openai.com/share/some-id"]
          }
        },
        "required": ["type"]
      },
      "timestamps": {
        "$ref": "#/$defs/timestamps"
      },
      "participants": {
        "description": "A summary of the participants, derived server-side from the messages.",
        "type": "array",
        "items": { "$ref": "#/$defs/participant" }
      },
      "messages": {
        "description": "An ordered array of all messages exchanged in the conversation.",
        "type": "array",
        "items": { "$ref": "#/$defs/message" }
      },
      "metadata": {
        "$ref": "#/$defs/metadata"
      },
      "lineage": {
         "$ref": "#/$defs/lineage"
      }
    },
    "required": [
      "_id",
      "conversation_id",
      "title",
      "source",
      "timestamps",
      "participants",
      "messages"
    ],
    "$defs": {
      "timestamps": {
        "description": "Timestamps related to the conversation lifecycle. Useful for sorting and analytics.",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "created_at": {"type": "string", "format": "date-time"},
          "last_active_at": {"type": "string", "format": "date-time"},
          "scraped_at": {"type": "string", "format": "date-time"},
          "published_at": {"type": "string", "format": "date-time"}
        },
        "required": ["scraped_at"]
      },
      "participant": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "role": {"type": "string", "enum": ["user", "assistant", "system"]},
            "model_info": {
               "type": "object",
               "additionalProperties": false,
               "properties": {
                   "name": { "type": "string", "examples": ["GPT-4o"]},
                   "version": { "type": "string", "examples": ["2024-05-13"]},
                   "provider": { "type": "string", "examples": ["OpenAI"]}
               }
            }
          },
          "required": ["role"]
      },
      "message": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "role": {"type": "string", "enum": ["user", "assistant", "system"]},
          "create_time": {"description": "Original Unix timestamp from the source.", "type": "number", "examples": [1748575495621]},
          "timestamp": {"description": "ISO 8601 timestamp when processed.", "type": "string", "format": "date-time"},
          "content": {
            "type": "array",
            "items": { "$ref": "#/$defs/contentBlock" }
          }
        },
        "required": ["role", "content", "timestamp"]
      },
      "contentBlock": {
          "description": "A block of content within a message, allowing for multimodal data.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
              "type": {"type": "string", "enum": ["text", "code", "latex", "image"]},
              "data": {"type": "string"},
              "language": {"type": "string", "description": "Required if type is 'code'.", "examples": ["python", "javascript"]}
          },
          "required": ["type", "data"]
      },
      "metadata": {
          "description": "Non-essential data for discovery and analysis.",
          "type": "object",
          "properties": {
              "tags": {"type": "array", "items": {"type": "string"}},
              "topics": {"type": "array", "items": {"type": "string"}},
              "language": {"type": "string"},
              "privacy_level": {"type": "string", "enum": ["public", "anonymous"], "default": "anonymous"}
          }
      },
      "lineage": {
          "description": "Data for tracking conversation evolution and history.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
              "parent_id": {"type": "string"},
              "merged_from": {"type": "array", "items": {"type": "string"}},
              "generation": {"type": "integer", "default": 1}
          }
      }
    }
  }